services:
  # Api
  api-service:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: api-service
    env_file:
      - .env
    depends_on:
      - postgres_text
      - redis_text
    ports:
      - "8001:8001"
    networks:
      - api_network
      - hash_network

  hash-service:
    build:
      context: ./hash_service
      dockerfile: Dockerfile
    container_name: hash-service
    ports:
      - "8002:8002"
    env_file:
      - .env
    depends_on:
      - postgres_hash
      - redis_hash
    networks:
      - hash_network

  # Worker and rabbit
  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    container_name: worker
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres_text

  rabbitmq:
    image: rabbitmq:3.9-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    command: >
      sh -c "rabbitmq-plugins enable rabbitmq_delayed_message_exchange && rabbitmq-server"
      


  # Redis
  redis_text:
    image: redis:7.2-alpine
    container_name: redis_text
    restart: always
    networks:
      - api_network

  redis_hash:
    image: redis:7.2-alpine
    container_name: redis_hash
    restart: always
    networks:
      - hash_network


  # postgres
  postgres_text:
    image: postgres:16-alpine
    container_name: postgres_text
    restart: always
#    build:
#      context: ./postgreSQL
#      dockerfile: Dockerfile  # Использовать докер файл, для запуска конфига бд
    environment:  # todo Пробовать с енв
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: pastebin_text
    volumes:
      - ./init_text.sql:/docker-entrypoint-initdb.d/init.sql
      - pg_data_text:/var/lib/postgresql/data
    networks:
      - api_network

  postgres_hash:
    image: postgres:16-alpine
    container_name: postgres_hash
    restart: always
    #    build:
    #      context: ./postgreSQL
    #      dockerfile: Dockerfile  # Использовать докер файл, для запуска конфига бд
    environment:  # todo Пробовать с енв
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: pastebin_hash
    volumes:
      - ./init_hash.sql:/docker-entrypoint-initdb.d/init.sql  # fixme: Есть ошибка или не отрабатывает (хэш сам делает последовательность)
      - pg_data_hash:/var/lib/postgresql/data
    networks:
      - hash_network


volumes:
  pg_data_text:
    driver: local
  pg_data_hash:
    driver: local
  rabbitmq-data:
    driver: local

networks:
  api_network:
    driver: bridge
  hash_network:
    driver: bridge
